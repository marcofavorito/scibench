[tox]
isolated_build = True
envlist = bandit, safety, check-copyright, black-check, isort-check, vulture, flake8, mypy, pylint, py3.9, py3.8, docs

[tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    pytest>=7.1.1,<7.2.0
    pytest-cov>=3.0.0,<3.1.0
    pytest-randomly>=3.11.0,<3.12.0
    hypothesis>=6.41.0,<6.42.0
    ; Other test dependencies
    ; ...
    ; Main dependencies
    ; TODO

commands =
    pytest --basetemp={envtmpdir} --doctest-modules \
        scibench tests/ \
        --cov=scibench \
        --cov-report=xml \
        --cov-report=html \
        --cov-report=term

[testenv:py3.8]
basepython = python3.8

[testenv:py3.9]
basepython = python3.9

[testenv:flake8]
skip_install = True
deps =
    flake8>=4.0.1,<4.1.0
    flake8-bugbear>=22.3.23,<22.4.0
    flake8-docstrings>=1.6.0,<1.8.0
    flake8-eradicate>=1.2.0,<1.3.0
    flake8-isort>=4.1.1,<4.2.0
    pydocstyle>=6.1.1,<6.2.0
commands =
    flake8 scibench tests scripts

[testenv:mypy]
skip_install = True
deps =
    mypy>=0.931,<0.940
commands =
    mypy scibench tests scripts

[testenv:pylint]
skipdist = True
deps =
    pylint>=2.13.5,<2.14.0
    pytest>=7.1.1,<7.2.0
    hypothesis>=6.41.0,<6.42.0
commands = pylint scibench tests scripts

[testenv:black]
skip_install = True
deps = black>=22.3.0,<22.4.0
commands = black scibench tests scripts

[testenv:black-check]
skip_install = True
deps = black>=22.3.0,<22.4.0
commands = black scibench tests scripts --check --verbose

[testenv:isort]
skip_install = True
deps = isort>=5.10.1,<5.11.0
commands = isort scibench tests scripts

[testenv:isort-check]
skip_install = True
deps = isort>=5.10.1,<5.11.0
commands = isort --check-only scibench tests scripts

[testenv:bandit]
skipsdist = True
skip_install = True
deps = bandit>=1.7.2,<1.8.0
commands = bandit scibench tests scripts

[testenv:safety]
skipsdist = True
skip_install = True
deps = safety>=1.10.3,<1.11.0
commands = safety

[testenv:vulture]
skipsdist = True
skip_install = True
deps = vulture>=2.3,<2.4
commands = vulture scibench scripts/whitelist.py

[testenv:darglint]
skipsdist = True
skip_install = True
deps = darglint>=1.8.1,<1.9.0
commands = darglint scibench

[testenv:docs]
skip_install = True
deps =
    mkdocs>=1.3.0
    mkdocs-material>=8.2.8,<8.3.0
    mknotebooks>=0.7.1,<0.8.0
    markdown-include>=0.6.0,<0.7.0
    pymdown-extensions>=9.3,<9.4
    markdown>=3.3.6,<3.4.0
    mkdocstrings>=0.18.0,<0.19.0
    mkdocs-autorefs>=0.4.1,<0.5.0
commands =
    mkdocs build --clean

[testenv:docs-serve]
skip_install = True
deps =
    mkdocs>=1.3.0
    mkdocs-material>=8.2.8,<8.3.0
    mknotebooks>=0.7.1,<0.8.0
    markdown-include>=0.6.0,<0.7.0
    pymdown-extensions>=9.3,<9.4
    markdown>=3.3.6,<3.4.0
    mkdocstrings>=0.18.0,<0.19.0
    mkdocs-autorefs>=0.4.1,<0.5.0
commands =
    mkdocs build --clean
    python -c 'print("###### Starting local server. Press Control+C to stop server ######")'
    mkdocs serve

[testenv:check-copyright]
skip_install = True
deps =
commands = python3 scripts/check_copyright.py

[testenv:spell-check]
skip_install = True
deps =
commands = {toxinidir}/scripts/spell-check.sh

[testenv:spell-check-report]
skip_install = True
deps =
commands = {toxinidir}/scripts/spell-check.sh --only-check
